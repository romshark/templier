# proxy-timeout defines how long to wait for the
# application server process to start when receiving
# connection refused errors while proxying.
proxy-timeout: 10s

# lint enables golangci-lint when true.
lint: true

# templier-host defines what host address to run Templiér on.
templier-host: "your-application:11000"

# print-js-debug-logs enables Templiér debug logs in the browser.
print-js-debug-logs: true

# verbose enables verbose console logs when true.
# This doesn't affect app server logs.
verbose: true

debounce:
  # debounce.templ defines how long to wait for more _templ.txt file changes
  # after the first one occured before triggering all browser tabs to reload.
  templ: 50ms

  # debounce.go defines how long to wait for more non-templ file changes
  # after the first one occured before triggering server rebuild and restart.
  go: 50ms

# tls can be set to null to serve HTTP instead of HTTPS.
tls:
  # tls.cert defines the TLS certificate file path.
  cert: ./your-application.crt.pem

  # tls.keys defines the TLS private key file path.
  key: ./your-application.key.pem

app:
  # app.dir-src-root defines the path to the Go module source root directory.
  dir-src-root: ./

  # app.exclude defines glob filter expressions relative to app.dir-src-root
  # to match files exluded from watching.
  exclude:
    - .* # all hidden files and directories

  # app.dir-cmd defines the path to the main package directory
  # within the app source directory.
  dir-cmd: ./cmd/server/

  # app.dir-work defines the path to the workspace directory
  # to run the application server executable in.
  dir-work: ./

  # app.host defines the host address the application server is running on.
  host: https://your-application:12000

  # app.go-flags defines additional Go compiler CLI arguments to provide when
  # compiling the application server executable.
  go-flags:

  # app.flags defines the CLI arguments as a string provided
  # to the application server executable.
  flags: -host your-application:12000
